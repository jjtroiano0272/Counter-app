{"version":3,"sources":["components/counter.jsx","components/counters.jsx","components/navbar.jsx","App.js","reportWebVitals.js","index.js"],"names":["Counter","styles","fontSize","fontWeight","prevProps","prevState","console","log","counter","value","this","props","classes","state","tags","length","style","listStyleType","map","tag","Fragment","className","getBadgeClasses","formatCount","onClick","onIncrement","onDecrement","disabled","onDelete","id","Component","Counters","onReset","counters","NavBar","href","totalCounters","App","handleReset","c","setState","handleIncrement","index","indexOf","handleDecrement","handleDelete","counterId","filter","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.379409bd.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\nclass Counter extends Component {\n  // Functions in JS ARE OBJECTS\n  // constructor() {\n  // \tsuper();\n  // \tthis.handleIncrement = this.handleIncrement.bind(this);\n  // }\n  // state includes data local/private to that component\n\n  styles = {\n    fontSize: 14,\n    fontWeight: 'bold',\n  };\n\n  componentDidUpdate(prevProps, prevState) {\n    console.log('previous props: ', prevProps);\n    console.log('previous state: ', prevState);\n\n    if (prevProps.counter.value !== this.props.counter.value) {\n      // Ajax call & get new data from server\n    }\n  }\n\n  componentWillUnmount() {\n    console.log('Counter - UNmounted.');\n  }\n\n  getBadgeClasses() {\n    let classes = 'badge align-center m-2 badge-';\n    classes += this.props.counter.value === 0 ? 'warning' : 'primary';\n    return classes;\n  }\n\n  formatCount() {\n    const { value } = this.props.counter;\n    return value === 0 ? 'Zero' : value;\n  }\n\n  onDelete() {}\n\n  renderTags() {\n    if (this.state.tags.length === 0) return <p>'N'il ya pas des tagues!'</p>;\n\n    return (\n      <ul style={{ listStyleType: 'none' }}>\n        {this.state.tags.map((tag) => (\n          <li key={tag}>{tag}</li>\n        ))}\n      </ul>\n    );\n  }\n\n  render() {\n    console.log('Counter - rendered');\n\n    return (\n      <React.Fragment>\n        <div className='row'>\n          <div className='col-1 mx-auto'>\n            {/* TODO: Counter (variable size) */}\n            <span style={this.styles} className={this.getBadgeClasses()}>\n              {this.formatCount()}\n            </span>\n          </div>\n          <div className='col'>\n            {/* TODO: Buttons to right (static) */}\n            <button\n              //   onClick={() => this.props.onIncrement(this.props.counter)}\n              onClick={() => this.props.onIncrement(this.props.counter)}\n              className='btn btn-secondary btn-sm'\n            >\n              +\n            </button>\n            {/* TODO: Decrement button */}\n            <button\n              onClick={() => this.props.onDecrement(this.props.counter)}\n              className='btn btn-secondary btn-sm m-2'\n              disabled={this.props.counter.value === 0 ? 'disabled' : ''}\n            >\n              -\n            </button>\n            <button\n              onClick={() => this.props.onDelete(this.props.counter.id)}\n              className='btn btn-danger btn-sm m-2'\n            >\n              Delete\n            </button>\n            {/* A 'truthy' expression: if the first n operands are true, the final one is evaulated.\n                         Strings in JS are truthy as well as numbers > 0. */}\n            {/* {this.state.tags.length === 0 && 'Please create a new tag.'}\n            {this.renderTags()} */}\n          </div>\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default Counter;\n","import React, { Component } from 'react';\nimport Counter from './counter';\n\nclass Counters extends Component {\n  render() {\n    console.log('Counters - rendered');\n    const { onReset, counters, onDelete, onIncrement, onDecrement } =\n      this.props;\n\n    return (\n      <div>\n        <button onClick={onReset} className='btn btn-primary btn-sm m-2'>\n          Reset\n        </button>\n        {counters.map((counter) => (\n          <Counter\n            key={counter.id}\n            onDelete={onDelete}\n            onIncrement={onIncrement}\n            onDecrement={onDecrement}\n            counter={counter}\n          />\n        ))}\n      </div>\n    );\n  }\n}\n\nexport default Counters;\n","import React, { Component } from 'react';\n\n// Stateless function Component (using function to define a componetn rather than class)\nconst NavBar = (props) => {\n  console.log('NavBar - rendered');\n\n  return (\n    <nav className='navbar navbar-light bg-light'>\n      <a href='#' className='navbar-brand'>\n        Navbar{' '}\n        <span className='badge badge-pill badge-secondary'>\n          {props.totalCounters}\n        </span>\n      </a>\n    </nav>\n  );\n};\n\nexport default NavBar;\n","import React, { Component } from 'react';\nimport Counters from './components/counters';\nimport NavBar from './components/navbar';\nimport Pagination from './components/common/pagination';\nimport './App.css';\nimport 'font-awesome/css/font-awesome.css';\n\nclass App extends Component {\n  state = {\n    counters: [\n      { id: 1, value: 4 },\n      { id: 2, value: 0 },\n      { id: 3, value: 0 },\n      { id: 4, value: 0 },\n    ],\n  };\n\n  constructor() {\n    super();\n    console.log('App - constructor');\n  }\n\n  componentDidMount() {\n    // Ajax call\n    console.log('App - mounted');\n  }\n\n  handleReset = () => {\n    const counters = this.state.counters.map((c) => {\n      c.value = 0;\n      return c;\n    });\n    this.setState({ counters });\n  };\n\n  handleIncrement = (counter) => {\n    const counters = [...this.state.counters];\n    const index = counters.indexOf(counter);\n    counters[index] = { ...counter };\n    counters[index].value++;\n    this.setState({ counters });\n  };\n\n  handleDecrement = (counter) => {\n    const counters = [...this.state.counters];\n    const index = counters.indexOf(counter);\n    counters[index] = { ...counter };\n    counters[index].value--;\n    this.setState({ counters });\n  };\n\n  handleDelete = (counterId) => {\n    const counters = this.state.counters.filter((c) => c.id !== counterId);\n    this.setState({ counters });\n  };\n\n  render() {\n    console.log('App - rendered');\n    return (\n      <React.Fragment>\n        <main className='container'>\n          <NavBar\n            totalCounters={\n              this.state.counters.filter((c) => c.value > 0).length\n            }\n          />\n          <Counters\n            counters={this.state.counters}\n            onReset={this.handleReset}\n            onIncrement={this.handleIncrement}\n            onDecrement={this.handleDecrement}\n            onDelete={this.handleDelete}\n          />\n        </main>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport 'font-awesome/css/font-awesome.css';\n// import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nReactDOM.render(\n  // <React.StrictMode>\n  <App />,\n  // </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}